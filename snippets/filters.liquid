{% liquid 
  assign products = collection.products
  assign options = products | map: 'options'
  assign variants = products | map: 'variants'

  comment
    key value combinations.
    Match product options and variants to eachother by index. Example output 'Color:Red,Material:Wood'
  endcomment

  assign all_combinations = ''
  for variant in variants
    assign variant_index = forloop.index | minus: 1
    for item in variant
      for option in item.options
        assign option_index = forloop.index | minus: 1
        assign all_combinations = all_combinations | append: options[variant_index][option_index] | append: ':' | append: option | append: ', '
      endfor
    endfor
  endfor

  assign all_combinations = all_combinations | split: ', ' | uniq | sort

  comment
    select values that contain name, select value and label
    Turn value key value combinations into usable pairs. Example: 'Color-color:red,color:blue;Material-material:wood;'
  endcomment

  assign variant_filters = nil
  for variation in all_combinations
    assign prev_index = forloop.index | minus: 1
    assign next_index = forloop.index | plus: 1
    assign next_option_variant = all_combinations[ next_index ] | split: ':'
    assign prev_option_variant = all_combinations[ prev_index ] | split: ':'
    assign option_variant = variation | split: ':'

    assign variant = option_variant[0] | append: ':' | append: option_variant[1] | append: ':' | append: option_variant[1]

    if forloop.first
      assign variant_filters = option_variant[0] | append: '-' | append: variant | append: ', '
    endif

    unless forloop.first
      if variant_filters contains option_variant[0]
        assign variant_filters = variant_filters | append: variant | append: ','
      else
        assign next_filter = option_variant[0] | prepend: '; ' | append: '-' | append: variant | append: ', '
        assign variant_filters = variant_filters | append: next_filter
      endif
    endunless
  endfor

  if variant_filters
    assign variant_filters = variant_filters | split: '; '
  endif
%}
<div class="row">
  {% render 'filters-checklist', name: 'Availablity', values: 'availability:true:In Stock,availability:false:Out of Stock' %}
  <a class="feather-select feather-select--dropdown">
    <div data-select="price" class="container">
      <span>Price</span>
      {% render 'icon-caret' %}
    </div>
    <div data-select-dropdown="price" class="feather-select__dropdown feather-filters--price">
      <div class="feather-filters__item input">
        <label>Minimum</label>
        <input type="text" />
      </div>
      <div class="feather-filters__item input">
        <label>Maximum</label>
        <input type="text" />
      </div>
    </div>
  </a>
  {% for filter in variant_filters %}
    {% liquid 
      assign obj = filter | split: '-'
      assign name = obj[0]
      assign values = obj[1] | downcase
    %}

    {% render 'filters-checklist', name: name, values: values, labe_style: 'text-transform: capitalize;' %}
  {% endfor %}
</div>