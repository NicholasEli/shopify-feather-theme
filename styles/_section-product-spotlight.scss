@mixin spotlight-text {
	max-width: 100%;
	position: absolute;
	bottom: $gutter;
	left: $gutter;
	z-index: 2;
	margin: 0;
	padding-right: multiply($gutter, 2);
	overflow: hidden;
	font-family: $ibarra;
	font-size: 20px;
	text-transform: capitalize;
	text-overflow: ellipsis;
	color: #fff;
	white-space: nowrap;
}

.feather-product-spotlight {
	&__title {
		p {
			font-family: $ibarra;
			font-size: 26px;
			line-height: 1.5;

			@media (min-width: #{$md}) {
				text-align: right;
			}
		}
	}

	&__tagline,
	&__sub-tagline {
		p {
			color: $text;
		}

		[data-in-view] {
			transform: translateY(multiply(16px, 3));
			opacity: 0;
			transition-duration: 500ms;
			transition-timing-function: $timing;
		}

		[data-in-view='true'] {
			transform: translateY(0);
			opacity: 1;
		}
	}

	&__sub-tagline {
		.container {
			padding-bottom: 0;
		}

		p {
			margin: 0;
		}
	}

	&__items {
		@include curtain-animation;
		width: 100%;

		a {
			position: relative;
		}

		img,
		picture {
			width: 100%;
			height: 100%;
			object-fit: cover;
			display: block;
			transition: all 200ms;
		}

		.glide {
			li {
				height: 400px;
				overflow: hidden;

				&:hover {
					picture,
					img {
						transform: scale(1.1, 1.1);
					}
				}

				a {
					span {
						@include spotlight-text;
					}
				}
			}
		}
	}

	&__column {
		margin-left: multiply($gutter, 3);
		a {
			height: 600px;
			position: relative;
			display: inline-block;
			margin-bottom: multiply($gutter, 3);
			overflow: hidden;

			&:nth-child(2n) {
				min-width: calc(120%);
			}

			&:hover {
				picture,
				img {
					transform: scale(1.1, 1.1);
				}
			}

			span {
				@include spotlight-text;
			}
		}

		& + .feather-product-spotlight__column {
			a {
				height: 550px;
			}
		}

		&:nth-of-type(odd) {
			a:nth-child(2n) {
				height: 400px;
				left: -20%;
			}
		}

		&:nth-of-type(even) {
			a {
				height: 500px;

				&:first-of-type {
					margin-top: multiply($gutter, 3);
				}

				&:nth-child(2n) {
					height: 400px;
				}
			}
		}
	}

	.container {
		&:first-of-type {
			padding-top: multiply($gutter, 6);
		}

		&:last-of-type {
			padding-bottom: multiply($gutter, 6);
		}
	}
}
